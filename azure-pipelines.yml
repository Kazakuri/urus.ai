trigger:
- master
pr:
- master

jobs:
- template: ci/azure-pipelines-template.yml
  parameters:
    name: macOS
    displayName: macOS
    vmImage: macOS-10.13
    variables:
      DATABASE_URL: postgres://postgres@localhost/urusai
    setup:
      - bash: |
          brew update &&
          brew install postgres &&
          brew services start postgres &&
          sleep 3 &&
          /usr/local/opt/postgres/bin/createuser -s postgres
        displayName: Install PostgresQL

- template: ci/azure-pipelines-template.yml
  parameters:
    name: Linux
    displayName: Linux
    vmImage: ubuntu-16.04
    variables:
      DATABASE_URL: postgres://postgres:postgres@localhost/urusai
    setup:
      - bash: |
          sudo apt-get update &&
          sudo apt-get -y install postgresql libpq-dev &&
          echo "host    all             all             127.0.0.1/32            md5" > sudo tee -a /etc/postgresql/9.5/main/pg_hba.conf &&
          sudo service postgresql restart && sleep 3 &&
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';" &&
          sudo service postgresql restart && sleep 3
        displayName: Install PostgresQL

- template: ci/azure-pipelines-template.yml
  parameters:
    name: Windows
    displayName: Windows
    vmImage: vs2017-win2016
    variables:
      BACKEND: postgres
      PG_DATABASE_URL: postgres://postgres:postgres@localhost/urusai
      PQ_LIB_DIR: C:\Program Files\PostgreSQL\10\lib
    setup:
      - script: |
          choco install postgresql10 --force --params '/Password:postgres'
          set PATH=%PATH%;C:\Program Files\PostgreSQL\10\bin;C:\Program Files\PostgreSQL\10\lib"
          echo "##vso[task.setvariable variable=PATH;]%PATH%;C:\Program Files\PostgreSQL\10\bin;C:\Program Files\PostgreSQL\10\lib"
        displayName: Install PostgresQL

- job: RUSTFMT_AND_CLIPPY
  displayName: Check rustfmt style && run clippy
  pool:
    vmImage: ubuntu-16.04
  steps:
    - template: ci/azure-install-rust.yml
      parameters:
        platform: Linux
        rust_version: stable
    - bash: |
        sudo apt-get update &&
        sudo apt-get -y install libpq-dev
      displayName: Install build dependencies
    - bash: |
        rustup component add rustfmt
      displayName: Install rustfmt
    - bash: |
        rustup component add clippy
      displayName: Install clippy
    - bash: |
        cargo clippy
      displayName: Run clippy
    - bash: |
        cargo fmt --all -- --check
      displayName: Check style
